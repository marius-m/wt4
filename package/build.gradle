import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'base'

ext {
    publishVersion = rootProject.versionName
    bundlerScript = file('scripts/build-package.sh')
    applicationLibraryPath = file("${rootProject.project(':app').buildDir}/libs/")
    mainJar = file("${applicationLibraryPath.absolutePath}/app-${publishVersion}-all.jar")
    bundlePath = file("${buildDir}/bundle")
    extraBundlerArguments = []
    packageType = 'all'
    if (Os.isFamily(Os.FAMILY_MAC)) {
        packageType = 'dmg'
        appIcon = file('icons/mac/AppIcon.icns')
        extraBundlerArguments = []
    } else if (Os.isFamily(Os.FAMILY_UNIX)) {
        packageType = 'deb'
        appIcon = file('icons/App1024.png')
        sessionIcon = file('icons/Doc1024.png')
    } else if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        packageType = 'exe'
        appIcon = file('icons/windows/AppIcon.ico')
        bundlerScript = file('scripts/build-package.bat')
    }
}

task recreateIconMacApp(type: Exec) {
    description 'Regenerate the Mac application icon'
    commandLine 'sh', file('scripts/mac-icon.sh'), file('icons/App1024.png'), file('icons/mac'), 'AppIcon'
}

task recreateIconWindowsApp(type: Exec) {
    description 'Regenerate the Windows application icon'
    commandLine 'sh', file('scripts/windows-icon.sh'), file('icons/App1024.png'), file('icons/windows'), 'AppIcon'
}

task recreateIcons(dependsOn: [recreateIconMacApp, recreateIconWindowsApp]) {
    description 'Regenerate all the application bundle icons'
}

task checkBundlingEnvironment {
    description 'Check the environment for building the installable bundle'
    doLast {
        if (!mainJar.exists()) {
            throw GradleException("Main file does not exist: ${mainJar}")
        }
    }
}

task createBundle(type: Exec, dependsOn: [checkBundlingEnvironment]) {
    description 'Build the installable bundle'
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    	println("bundlerScript: $bundlerScript")
        commandLine 'cmd', '/c',
                bundlerScript,
		packageType,
                applicationLibraryPath,
                bundlePath,
                mainJar.name,
                publishVersion,
                appIcon
    } else {
        commandLine = [
                'sh',
                bundlerScript,
                packageType,
                applicationLibraryPath,
                bundlePath,
                mainJar.name,
                publishVersion,
                appIcon,
                *extraBundlerArguments
        ]
    }
}

