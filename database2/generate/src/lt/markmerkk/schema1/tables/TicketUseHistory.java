/*
 * This file is generated by jOOQ.
 */
package lt.markmerkk.schema1.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import lt.markmerkk.schema1.DefaultSchema;
import lt.markmerkk.schema1.Keys;
import lt.markmerkk.schema1.tables.records.TicketUseHistoryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketUseHistory extends TableImpl<TicketUseHistoryRecord> {

    private static final long serialVersionUID = 71447539;

    /**
     * The reference instance of <code>ticket_use_history</code>
     */
    public static final TicketUseHistory TICKET_USE_HISTORY = new TicketUseHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TicketUseHistoryRecord> getRecordType() {
        return TicketUseHistoryRecord.class;
    }

    /**
     * The column <code>ticket_use_history.id</code>.
     */
    public final TableField<TicketUseHistoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>ticket_use_history.code_project</code>.
     */
    public final TableField<TicketUseHistoryRecord, String> CODE_PROJECT = createField("code_project", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>ticket_use_history.code_number</code>.
     */
    public final TableField<TicketUseHistoryRecord, String> CODE_NUMBER = createField("code_number", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>ticket_use_history.code</code>.
     */
    public final TableField<TicketUseHistoryRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>ticket_use_history.lastUsed</code>.
     */
    public final TableField<TicketUseHistoryRecord, Long> LASTUSED = createField("lastUsed", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>ticket_use_history</code> table reference
     */
    public TicketUseHistory() {
        this(DSL.name("ticket_use_history"), null);
    }

    /**
     * Create an aliased <code>ticket_use_history</code> table reference
     */
    public TicketUseHistory(String alias) {
        this(DSL.name(alias), TICKET_USE_HISTORY);
    }

    /**
     * Create an aliased <code>ticket_use_history</code> table reference
     */
    public TicketUseHistory(Name alias) {
        this(alias, TICKET_USE_HISTORY);
    }

    private TicketUseHistory(Name alias, Table<TicketUseHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private TicketUseHistory(Name alias, Table<TicketUseHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TicketUseHistory(Table<O> child, ForeignKey<O, TicketUseHistoryRecord> key) {
        super(child, key, TICKET_USE_HISTORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TicketUseHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TICKET_USE_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TicketUseHistoryRecord> getPrimaryKey() {
        return Keys.PK_TICKET_USE_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TicketUseHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<TicketUseHistoryRecord>>asList(Keys.PK_TICKET_USE_HISTORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketUseHistory as(String alias) {
        return new TicketUseHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketUseHistory as(Name alias) {
        return new TicketUseHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TicketUseHistory rename(String name) {
        return new TicketUseHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TicketUseHistory rename(Name name) {
        return new TicketUseHistory(name, null);
    }
}
