/*
 * This file is generated by jOOQ.
 */
package lt.markmerkk.schema1.tables.records;


import javax.annotation.Generated;

import lt.markmerkk.schema1.tables.Ticket;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketRecord extends UpdatableRecordImpl<TicketRecord> implements Record13<Integer, String, String, String, String, Long, Long, Byte, Byte, Byte, String, Long, String> {

    private static final long serialVersionUID = -433065285;

    /**
     * Setter for <code>ticket.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ticket.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ticket.code_project</code>.
     */
    public void setCodeProject(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ticket.code_project</code>.
     */
    public String getCodeProject() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ticket.code_number</code>.
     */
    public void setCodeNumber(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ticket.code_number</code>.
     */
    public String getCodeNumber() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ticket.code</code>.
     */
    public void setCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>ticket.code</code>.
     */
    public String getCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ticket.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>ticket.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ticket.parent_id</code>.
     */
    public void setParentId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>ticket.parent_id</code>.
     */
    public Long getParentId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>ticket.remote_id</code>.
     */
    public void setRemoteId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>ticket.remote_id</code>.
     */
    public Long getRemoteId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>ticket.is_deleted</code>.
     */
    public void setIsDeleted(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>ticket.is_deleted</code>.
     */
    public Byte getIsDeleted() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>ticket.is_dirty</code>.
     */
    public void setIsDirty(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>ticket.is_dirty</code>.
     */
    public Byte getIsDirty() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>ticket.is_error</code>.
     */
    public void setIsError(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>ticket.is_error</code>.
     */
    public Byte getIsError() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>ticket.error_message</code>.
     */
    public void setErrorMessage(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>ticket.error_message</code>.
     */
    public String getErrorMessage() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ticket.fetchTime</code>.
     */
    public void setFetchtime(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>ticket.fetchTime</code>.
     */
    public Long getFetchtime() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>ticket.URL</code>.
     */
    public void setUrl(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>ticket.URL</code>.
     */
    public String getUrl() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, String, String, String, Long, Long, Byte, Byte, Byte, String, Long, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, String, String, String, Long, Long, Byte, Byte, Byte, String, Long, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Ticket.TICKET.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Ticket.TICKET.CODE_PROJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Ticket.TICKET.CODE_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Ticket.TICKET.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Ticket.TICKET.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return Ticket.TICKET.PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return Ticket.TICKET.REMOTE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return Ticket.TICKET.IS_DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return Ticket.TICKET.IS_DIRTY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field10() {
        return Ticket.TICKET.IS_ERROR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Ticket.TICKET.ERROR_MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return Ticket.TICKET.FETCHTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return Ticket.TICKET.URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCodeProject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCodeNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getRemoteId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component8() {
        return getIsDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component9() {
        return getIsDirty();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component10() {
        return getIsError();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getErrorMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component12() {
        return getFetchtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCodeProject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCodeNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getRemoteId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getIsDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getIsDirty();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value10() {
        return getIsError();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getErrorMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getFetchtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value2(String value) {
        setCodeProject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value3(String value) {
        setCodeNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value4(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value5(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value6(Long value) {
        setParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value7(Long value) {
        setRemoteId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value8(Byte value) {
        setIsDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value9(Byte value) {
        setIsDirty(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value10(Byte value) {
        setIsError(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value11(String value) {
        setErrorMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value12(Long value) {
        setFetchtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord value13(String value) {
        setUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketRecord values(Integer value1, String value2, String value3, String value4, String value5, Long value6, Long value7, Byte value8, Byte value9, Byte value10, String value11, Long value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketRecord
     */
    public TicketRecord() {
        super(Ticket.TICKET);
    }

    /**
     * Create a detached, initialised TicketRecord
     */
    public TicketRecord(Integer id, String codeProject, String codeNumber, String code, String description, Long parentId, Long remoteId, Byte isDeleted, Byte isDirty, Byte isError, String errorMessage, Long fetchtime, String url) {
        super(Ticket.TICKET);

        set(0, id);
        set(1, codeProject);
        set(2, codeNumber);
        set(3, code);
        set(4, description);
        set(5, parentId);
        set(6, remoteId);
        set(7, isDeleted);
        set(8, isDirty);
        set(9, isError);
        set(10, errorMessage);
        set(11, fetchtime);
        set(12, url);
    }
}
